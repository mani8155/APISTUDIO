"""tablenamechange

Revision ID: 9a4a1be7899d
Revises: 68d005c4cdc3
Create Date: 2024-06-29 17:46:50.533472

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a4a1be7899d'
down_revision: Union[str, None] = '68d005c4cdc3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nms_server_log',
    sa.Column('psk_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('transaction_remarks', sa.Text(), nullable=True),
    sa.Column('api_id', sa.String(), nullable=True),
    sa.Column('app_psk_id', sa.Integer(), nullable=True),
    sa.Column('app_uid', sa.String(), nullable=True),
    sa.Column('psk_uid', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('cancel_by', sa.String(), nullable=True),
    sa.Column('cancel_on', sa.DateTime(), nullable=True),
    sa.Column('cancel_status', sa.String(), nullable=True),
    sa.Column('cancel_remarks', sa.String(), nullable=True),
    sa.Column('approval_level_1', sa.Integer(), nullable=True),
    sa.Column('approval_level_2', sa.Integer(), nullable=True),
    sa.Column('approval_remarks', sa.Integer(), nullable=True),
    sa.Column('workflow_id', sa.String(), nullable=True),
    sa.Column('workflow_role', sa.String(), nullable=True),
    sa.Column('row_order', sa.Integer(), nullable=True),
    sa.Column('gis_latitude', sa.Float(), nullable=True),
    sa.Column('gis_longitude', sa.Float(), nullable=True),
    sa.Column('cdn_location', sa.String(), nullable=True),
    sa.Column('cpu_usage', sa.Integer(), nullable=True),
    sa.Column('memory_usage', sa.Integer(), nullable=True),
    sa.Column('disk_usage', sa.Integer(), nullable=True),
    sa.Column('event_time', sa.Time(), nullable=True),
    sa.PrimaryKeyConstraint('psk_id')
    )
    op.create_index(op.f('ix_nms_server_log_psk_id'), 'nms_server_log', ['psk_id'], unique=False)
    op.drop_index('ix_nsm_server_log_psk_id', table_name='nsm_server_log')
    op.drop_table('nsm_server_log')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nsm_server_log',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cpu_usage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('memory_usage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('disk_usage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('psk_id', name='nsm_server_log_pkey')
    )
    op.create_index('ix_nsm_server_log_psk_id', 'nsm_server_log', ['psk_id'], unique=False)
    op.drop_index(op.f('ix_nms_server_log_psk_id'), table_name='nms_server_log')
    op.drop_table('nms_server_log')
    # ### end Alembic commands ###
