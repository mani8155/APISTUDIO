"""Field

Revision ID: 54a9fdc9c764
Revises: 9e5ebae375ac
Create Date: 2024-03-27 15:31:56.043393

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '54a9fdc9c764'
down_revision: Union[str, None] = '9e5ebae375ac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_product_category_psk_id', table_name='product_category')
    op.drop_table('product_category')
    op.drop_index('ix_test_psk_id', table_name='test')
    op.drop_table('test')
    op.drop_index('ix_test_user_psk_id', table_name='test_user')
    op.drop_table('test_user')
    op.drop_index('ix_application_psk_id', table_name='application')
    op.drop_table('application')
    op.drop_index('ix_sale_order_line_psk_id', table_name='sale_order_line')
    op.drop_table('sale_order_line')
    op.drop_index('ix_sdfasdf_psk_id', table_name='sdfasdf')
    op.drop_table('sdfasdf')
    op.drop_index('ix_api_model_migrations_id', table_name='api_model_migrations')
    op.drop_table('api_model_migrations')
    op.add_column('asa0202_01_01', sa.Column('menu_dropdown', sa.String(), nullable=True))
    op.add_column('asa0202_01_01', sa.Column('menu_href', sa.String(), nullable=True))
    op.add_column('asa0202_01_01', sa.Column('menu_icon', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('asa0202_01_01', 'menu_icon')
    op.drop_column('asa0202_01_01', 'menu_href')
    op.drop_column('asa0202_01_01', 'menu_dropdown')
    op.create_table('api_model_migrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('table_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('table_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['table_id'], ['api_models.id'], name='api_model_migrations_table_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='api_model_migrations_pkey')
    )
    op.create_index('ix_api_model_migrations_id', 'api_model_migrations', ['id'], unique=False)
    op.create_table('sdfasdf',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('psk_id', name='sdfasdf_pkey')
    )
    op.create_index('ix_sdfasdf_psk_id', 'sdfasdf', ['psk_id'], unique=False)
    op.create_table('sale_order_line',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('product', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unit_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sales', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product'], ['product.psk_id'], name='sale_order_line_product_fkey'),
    sa.ForeignKeyConstraint(['sales'], ['sales.psk_id'], name='sale_order_line_sales_fkey'),
    sa.PrimaryKeyConstraint('psk_id', name='sale_order_line_pkey')
    )
    op.create_index('ix_sale_order_line_psk_id', 'sale_order_line', ['psk_id'], unique=False)
    op.create_table('application',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('application_group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pass_test', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('test_pass', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('test_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('qwerty', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('test_int', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['application_group_id'], ['application_group.psk_id'], name='application_application_group_id_fkey'),
    sa.PrimaryKeyConstraint('psk_id', name='application_pkey'),
    sa.UniqueConstraint('uid', name='application_uid_key')
    )
    op.create_index('ix_application_psk_id', 'application', ['psk_id'], unique=False)
    op.create_table('test_user',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('psk_id', name='test_user_pkey')
    )
    op.create_index('ix_test_user_psk_id', 'test_user', ['psk_id'], unique=False)
    op.create_table('test',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('psk_id', name='test_pkey')
    )
    op.create_index('ix_test_psk_id', 'test', ['psk_id'], unique=False)
    op.create_table('product_category',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('psk_id', name='product_category_pkey')
    )
    op.create_index('ix_product_category_psk_id', 'product_category', ['psk_id'], unique=False)
    # ### end Alembic commands ###
