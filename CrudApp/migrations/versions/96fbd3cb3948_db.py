"""db

Revision ID: 96fbd3cb3948
Revises: e02ad8852db8
Create Date: 2024-03-27 15:34:31.256128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '96fbd3cb3948'
down_revision: Union[str, None] = 'e02ad8852db8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_customer_post_reaction_psk_id', table_name='customer_post_reaction')
    op.drop_table('customer_post_reaction')
    op.drop_index('ix_customer_post_psk_id', table_name='customer_post')
    op.drop_table('customer_post')
    op.drop_index('ix_sales_psk_id', table_name='sales')
    op.drop_table('sales')
    op.drop_index('ix_application_group_psk_id', table_name='application_group')
    op.drop_table('application_group')
    op.drop_index('ix_customer_media_psk_id', table_name='customer_media')
    op.drop_table('customer_media')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer_media',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('attachment_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_blob', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('file_mime', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_psk_id'], ['customer.psk_id'], name='customer_media_parent_psk_id_fkey'),
    sa.PrimaryKeyConstraint('psk_id', name='customer_media_pkey')
    )
    op.create_index('ix_customer_media_psk_id', 'customer_media', ['psk_id'], unique=False)
    op.create_table('application_group',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('psk_id', name='application_group_pkey')
    )
    op.create_index('ix_application_group_psk_id', 'application_group', ['psk_id'], unique=False)
    op.create_table('sales',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('app_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approval_level_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_level_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_remarks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workflow_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('workflow_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cdn_location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mobile_no', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customer'], ['customer.psk_id'], name='sales_customer_fkey'),
    sa.PrimaryKeyConstraint('psk_id', name='sales_pkey'),
    sa.UniqueConstraint('mobile_no', name='sales_mobile_no_key')
    )
    op.create_index('ix_sales_psk_id', 'sales', ['psk_id'], unique=False)
    op.create_table('customer_post',
    sa.Column('psk_id', sa.INTEGER(), server_default=sa.text("nextval('customer_post_psk_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('post_comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_blob', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('file_mime', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_psk_id'], ['customer.psk_id'], name='customer_post_parent_psk_id_fkey'),
    sa.PrimaryKeyConstraint('psk_id', name='customer_post_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_customer_post_psk_id', 'customer_post', ['psk_id'], unique=False)
    op.create_table('customer_post_reaction',
    sa.Column('psk_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('psk_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('post_psk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('app_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('row_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reaction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancel_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cancel_remarks', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gis_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gis_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_psk_id'], ['customer.psk_id'], name='customer_post_reaction_parent_psk_id_fkey'),
    sa.ForeignKeyConstraint(['post_psk_id'], ['customer_post.psk_id'], name='customer_post_reaction_post_psk_id_fkey'),
    sa.PrimaryKeyConstraint('psk_id', name='customer_post_reaction_pkey')
    )
    op.create_index('ix_customer_post_reaction_psk_id', 'customer_post_reaction', ['psk_id'], unique=False)
    # ### end Alembic commands ###
