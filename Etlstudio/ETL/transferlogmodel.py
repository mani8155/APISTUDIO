from sqlalchemy.orm import declarative_base
from sqlalchemy import Column, Integer, String, DateTime, func
Base = declarative_base()


class Transferlog(Base):
    __tablename__ = 'transferlog'  # Table name
    uuid = Column(Integer(), primary_key=True)
    source_transid = Column(String(10), nullable=True)
    source_username = Column(String(30), nullable=True)
    source_createdon = Column(DateTime(), default=func.now())
    source_modifiedon = Column(DateTime(), default=func.now(), onupdate=func.now())
    core_api = Column(String(100), nullable=True)
    status = Column(String(2))
    source_tablename = Column(String(50), nullable=True)
    source_sql = Column(String(4000), nullable=True)
    record_id = Column(Integer())
    errorlog = Column(String(4500), nullable=True)


mysql_script = '''
CREATE TABLE transferlog (
            uuid BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
            source_transid varchar(10) NULL,
            source_username varchar(30) NULL,
            source_createdon timestamp not NULL,
            source_modifiedon TIMESTAMP NULL,
            core_api varchar(100) NULL,
            status varchar(2) NULL,
            source_tablename varchar(50) NULL,
            source_sql varchar(4000) NULL,
            record_id int8 NOT NULL,
            errorlog text NULL
                  );
'''

postgresql_script = '''
CREATE TABLE transferlog (
            uuid int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
            source_transid varchar(10) NULL,
            source_username varchar(30) NULL,
            source_createdon timestamptz NOT NULL,
            source_modifiedon timestamptz NOT NULL,
            core_api varchar(100) NULL,
            status varchar(2) NULL,
            source_tablename varchar(50) NULL,
            source_sql varchar(4000) NULL,
            record_id int8 NOT NULL,
            errorlog text NULL,
            CONSTRAINT transferlog_pkey PRIMARY KEY (uuid)
        );'''